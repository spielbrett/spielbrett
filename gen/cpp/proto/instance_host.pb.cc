// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/instance_host.proto

#include "proto/instance_host.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace instance_host {
PROTOBUF_CONSTEXPR CreateInstanceRequest::CreateInstanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instance_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateInstanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInstanceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInstanceRequestDefaultTypeInternal() {}
  union {
    CreateInstanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInstanceRequestDefaultTypeInternal _CreateInstanceRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateInstanceResponse::CreateInstanceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instance_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateInstanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInstanceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInstanceResponseDefaultTypeInternal() {}
  union {
    CreateInstanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInstanceResponseDefaultTypeInternal _CreateInstanceResponse_default_instance_;
PROTOBUF_CONSTEXPR PerformActionRequest::PerformActionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instance_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.action_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.payload_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PerformActionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformActionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformActionRequestDefaultTypeInternal() {}
  union {
    PerformActionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformActionRequestDefaultTypeInternal _PerformActionRequest_default_instance_;
PROTOBUF_CONSTEXPR PerformActionResponse::PerformActionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PerformActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformActionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformActionResponseDefaultTypeInternal() {}
  union {
    PerformActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformActionResponseDefaultTypeInternal _PerformActionResponse_default_instance_;
}  // namespace instance_host
static ::_pb::Metadata file_level_metadata_proto_2finstance_5fhost_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2finstance_5fhost_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2finstance_5fhost_2eproto = nullptr;

const uint32_t TableStruct_proto_2finstance_5fhost_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instance_host::CreateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::instance_host::CreateInstanceRequest, _impl_.instance_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instance_host::CreateInstanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::instance_host::CreateInstanceResponse, _impl_.instance_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionRequest, _impl_.instance_id_),
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionRequest, _impl_.action_name_),
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionRequest, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::instance_host::PerformActionResponse, _impl_.payload_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::instance_host::CreateInstanceRequest)},
  { 7, -1, -1, sizeof(::instance_host::CreateInstanceResponse)},
  { 14, -1, -1, sizeof(::instance_host::PerformActionRequest)},
  { 24, -1, -1, sizeof(::instance_host::PerformActionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::instance_host::_CreateInstanceRequest_default_instance_._instance,
  &::instance_host::_CreateInstanceResponse_default_instance_._instance,
  &::instance_host::_PerformActionRequest_default_instance_._instance,
  &::instance_host::_PerformActionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2finstance_5fhost_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031proto/instance_host.proto\022\rinstance_ho"
  "st\"<\n\025CreateInstanceRequest\022#\n\rinstance_"
  "type\030\001 \001(\tR\014instanceType\"9\n\026CreateInstan"
  "ceResponse\022\037\n\013instance_id\030\001 \001(\tR\ninstanc"
  "eId\"\213\001\n\024PerformActionRequest\022\037\n\013instance"
  "_id\030\001 \001(\tR\ninstanceId\022\027\n\007user_id\030\002 \001(\tR\006"
  "userId\022\037\n\013action_name\030\003 \001(\tR\nactionName\022"
  "\030\n\007payload\030\004 \001(\tR\007payload\"1\n\025PerformActi"
  "onResponse\022\030\n\007payload\030\001 \001(\tR\007payload2\324\001\n"
  "\023InstanceHostService\022_\n\016CreateInstance\022$"
  ".instance_host.CreateInstanceRequest\032%.i"
  "nstance_host.CreateInstanceResponse\"\000\022\\\n"
  "\rPerformAction\022#.instance_host.PerformAc"
  "tionRequest\032$.instance_host.PerformActio"
  "nResponse\"\000B3Z1github.com/spielbrett/spi"
  "elbrett-api/gen/go/protob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_proto_2finstance_5fhost_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2finstance_5fhost_2eproto = {
    false, false, 632, descriptor_table_protodef_proto_2finstance_5fhost_2eproto,
    "proto/instance_host.proto",
    &descriptor_table_proto_2finstance_5fhost_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_proto_2finstance_5fhost_2eproto::offsets,
    file_level_metadata_proto_2finstance_5fhost_2eproto, file_level_enum_descriptors_proto_2finstance_5fhost_2eproto,
    file_level_service_descriptors_proto_2finstance_5fhost_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2finstance_5fhost_2eproto_getter() {
  return &descriptor_table_proto_2finstance_5fhost_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2finstance_5fhost_2eproto(&descriptor_table_proto_2finstance_5fhost_2eproto);
namespace instance_host {

// ===================================================================

class CreateInstanceRequest::_Internal {
 public:
};

CreateInstanceRequest::CreateInstanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:instance_host.CreateInstanceRequest)
}
CreateInstanceRequest::CreateInstanceRequest(const CreateInstanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateInstanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.instance_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instance_type().empty()) {
    _this->_impl_.instance_type_.Set(from._internal_instance_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:instance_host.CreateInstanceRequest)
}

inline void CreateInstanceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.instance_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateInstanceRequest::~CreateInstanceRequest() {
  // @@protoc_insertion_point(destructor:instance_host.CreateInstanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateInstanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instance_type_.Destroy();
}

void CreateInstanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:instance_host.CreateInstanceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInstanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string instance_type = 1 [json_name = "instanceType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_instance_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.CreateInstanceRequest.instance_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateInstanceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instance_host.CreateInstanceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_type = 1 [json_name = "instanceType"];
  if (!this->_internal_instance_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_type().data(), static_cast<int>(this->_internal_instance_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.CreateInstanceRequest.instance_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instance_host.CreateInstanceRequest)
  return target;
}

size_t CreateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instance_host.CreateInstanceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_type = 1 [json_name = "instanceType"];
  if (!this->_internal_instance_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInstanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateInstanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInstanceRequest::GetClassData() const { return &_class_data_; }


void CreateInstanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateInstanceRequest*>(&to_msg);
  auto& from = static_cast<const CreateInstanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:instance_host.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instance_type().empty()) {
    _this->_internal_set_instance_type(from._internal_instance_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInstanceRequest::CopyFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instance_host.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceRequest::IsInitialized() const {
  return true;
}

void CreateInstanceRequest::InternalSwap(CreateInstanceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instance_type_, lhs_arena,
      &other->_impl_.instance_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInstanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2finstance_5fhost_2eproto_getter, &descriptor_table_proto_2finstance_5fhost_2eproto_once,
      file_level_metadata_proto_2finstance_5fhost_2eproto[0]);
}

// ===================================================================

class CreateInstanceResponse::_Internal {
 public:
};

CreateInstanceResponse::CreateInstanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:instance_host.CreateInstanceResponse)
}
CreateInstanceResponse::CreateInstanceResponse(const CreateInstanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateInstanceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.instance_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instance_id().empty()) {
    _this->_impl_.instance_id_.Set(from._internal_instance_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:instance_host.CreateInstanceResponse)
}

inline void CreateInstanceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.instance_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateInstanceResponse::~CreateInstanceResponse() {
  // @@protoc_insertion_point(destructor:instance_host.CreateInstanceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateInstanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instance_id_.Destroy();
}

void CreateInstanceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateInstanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:instance_host.CreateInstanceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInstanceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string instance_id = 1 [json_name = "instanceId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.CreateInstanceResponse.instance_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateInstanceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instance_host.CreateInstanceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1 [json_name = "instanceId"];
  if (!this->_internal_instance_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.CreateInstanceResponse.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instance_host.CreateInstanceResponse)
  return target;
}

size_t CreateInstanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instance_host.CreateInstanceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1 [json_name = "instanceId"];
  if (!this->_internal_instance_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInstanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateInstanceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInstanceResponse::GetClassData() const { return &_class_data_; }


void CreateInstanceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateInstanceResponse*>(&to_msg);
  auto& from = static_cast<const CreateInstanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:instance_host.CreateInstanceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instance_id().empty()) {
    _this->_internal_set_instance_id(from._internal_instance_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInstanceResponse::CopyFrom(const CreateInstanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instance_host.CreateInstanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceResponse::IsInitialized() const {
  return true;
}

void CreateInstanceResponse::InternalSwap(CreateInstanceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instance_id_, lhs_arena,
      &other->_impl_.instance_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInstanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2finstance_5fhost_2eproto_getter, &descriptor_table_proto_2finstance_5fhost_2eproto_once,
      file_level_metadata_proto_2finstance_5fhost_2eproto[1]);
}

// ===================================================================

class PerformActionRequest::_Internal {
 public:
};

PerformActionRequest::PerformActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:instance_host.PerformActionRequest)
}
PerformActionRequest::PerformActionRequest(const PerformActionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PerformActionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.action_name_){}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.instance_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instance_id().empty()) {
    _this->_impl_.instance_id_.Set(from._internal_instance_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.action_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.action_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_action_name().empty()) {
    _this->_impl_.action_name_.Set(from._internal_action_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    _this->_impl_.payload_.Set(from._internal_payload(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:instance_host.PerformActionRequest)
}

inline void PerformActionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.action_name_){}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.instance_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.action_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.action_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PerformActionRequest::~PerformActionRequest() {
  // @@protoc_insertion_point(destructor:instance_host.PerformActionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PerformActionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instance_id_.Destroy();
  _impl_.user_id_.Destroy();
  _impl_.action_name_.Destroy();
  _impl_.payload_.Destroy();
}

void PerformActionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PerformActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:instance_host.PerformActionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.action_name_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PerformActionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string instance_id = 1 [json_name = "instanceId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_instance_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.PerformActionRequest.instance_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.PerformActionRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string action_name = 3 [json_name = "actionName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_action_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.PerformActionRequest.action_name"));
        } else
          goto handle_unusual;
        continue;
      // string payload = 4 [json_name = "payload"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_payload();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.PerformActionRequest.payload"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PerformActionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instance_host.PerformActionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_id = 1 [json_name = "instanceId"];
  if (!this->_internal_instance_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance_id().data(), static_cast<int>(this->_internal_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.PerformActionRequest.instance_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance_id(), target);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.PerformActionRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string action_name = 3 [json_name = "actionName"];
  if (!this->_internal_action_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action_name().data(), static_cast<int>(this->_internal_action_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.PerformActionRequest.action_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_action_name(), target);
  }

  // string payload = 4 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.PerformActionRequest.payload");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instance_host.PerformActionRequest)
  return target;
}

size_t PerformActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instance_host.PerformActionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_id = 1 [json_name = "instanceId"];
  if (!this->_internal_instance_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance_id());
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string action_name = 3 [json_name = "actionName"];
  if (!this->_internal_action_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action_name());
  }

  // string payload = 4 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PerformActionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PerformActionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PerformActionRequest::GetClassData() const { return &_class_data_; }


void PerformActionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PerformActionRequest*>(&to_msg);
  auto& from = static_cast<const PerformActionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:instance_host.PerformActionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instance_id().empty()) {
    _this->_internal_set_instance_id(from._internal_instance_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_action_name().empty()) {
    _this->_internal_set_action_name(from._internal_action_name());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PerformActionRequest::CopyFrom(const PerformActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instance_host.PerformActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerformActionRequest::IsInitialized() const {
  return true;
}

void PerformActionRequest::InternalSwap(PerformActionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instance_id_, lhs_arena,
      &other->_impl_.instance_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.action_name_, lhs_arena,
      &other->_impl_.action_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.payload_, lhs_arena,
      &other->_impl_.payload_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PerformActionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2finstance_5fhost_2eproto_getter, &descriptor_table_proto_2finstance_5fhost_2eproto_once,
      file_level_metadata_proto_2finstance_5fhost_2eproto[2]);
}

// ===================================================================

class PerformActionResponse::_Internal {
 public:
};

PerformActionResponse::PerformActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:instance_host.PerformActionResponse)
}
PerformActionResponse::PerformActionResponse(const PerformActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PerformActionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    _this->_impl_.payload_.Set(from._internal_payload(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:instance_host.PerformActionResponse)
}

inline void PerformActionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PerformActionResponse::~PerformActionResponse() {
  // @@protoc_insertion_point(destructor:instance_host.PerformActionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PerformActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.payload_.Destroy();
}

void PerformActionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PerformActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:instance_host.PerformActionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PerformActionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string payload = 1 [json_name = "payload"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_payload();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "instance_host.PerformActionResponse.payload"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PerformActionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:instance_host.PerformActionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string payload = 1 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "instance_host.PerformActionResponse.payload");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:instance_host.PerformActionResponse)
  return target;
}

size_t PerformActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:instance_host.PerformActionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PerformActionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PerformActionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PerformActionResponse::GetClassData() const { return &_class_data_; }


void PerformActionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PerformActionResponse*>(&to_msg);
  auto& from = static_cast<const PerformActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:instance_host.PerformActionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PerformActionResponse::CopyFrom(const PerformActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:instance_host.PerformActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerformActionResponse::IsInitialized() const {
  return true;
}

void PerformActionResponse::InternalSwap(PerformActionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.payload_, lhs_arena,
      &other->_impl_.payload_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PerformActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2finstance_5fhost_2eproto_getter, &descriptor_table_proto_2finstance_5fhost_2eproto_once,
      file_level_metadata_proto_2finstance_5fhost_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace instance_host
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::instance_host::CreateInstanceRequest*
Arena::CreateMaybeMessage< ::instance_host::CreateInstanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instance_host::CreateInstanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::instance_host::CreateInstanceResponse*
Arena::CreateMaybeMessage< ::instance_host::CreateInstanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instance_host::CreateInstanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::instance_host::PerformActionRequest*
Arena::CreateMaybeMessage< ::instance_host::PerformActionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instance_host::PerformActionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::instance_host::PerformActionResponse*
Arena::CreateMaybeMessage< ::instance_host::PerformActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::instance_host::PerformActionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

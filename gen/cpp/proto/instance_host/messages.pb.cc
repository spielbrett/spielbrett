// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/instance_host/messages.proto
// Protobuf C++ Version: 5.29.3

#include "proto/instance_host/messages.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace spielbrett_api {
namespace instance_host {
              template <typename>
PROTOBUF_CONSTEXPR PerformActionResponse_MarkupEntry_DoNotUse::PerformActionResponse_MarkupEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PerformActionResponse_MarkupEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PerformActionResponse_MarkupEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PerformActionResponse_MarkupEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformActionResponse_MarkupEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformActionResponse_MarkupEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PerformActionResponse_MarkupEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformActionResponse_MarkupEntry_DoNotUseDefaultTypeInternal _PerformActionResponse_MarkupEntry_DoNotUse_default_instance_;

inline constexpr PerformActionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : args_{},
        instance_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PerformActionRequest::PerformActionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PerformActionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformActionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformActionRequestDefaultTypeInternal() {}
  union {
    PerformActionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformActionRequestDefaultTypeInternal _PerformActionRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CreateInstanceResponse_MarkupEntry_DoNotUse::CreateInstanceResponse_MarkupEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CreateInstanceResponse_MarkupEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CreateInstanceResponse_MarkupEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CreateInstanceResponse_MarkupEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInstanceResponse_MarkupEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInstanceResponse_MarkupEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CreateInstanceResponse_MarkupEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInstanceResponse_MarkupEntry_DoNotUseDefaultTypeInternal _CreateInstanceResponse_MarkupEntry_DoNotUse_default_instance_;

inline constexpr CreateInstanceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_ids_{},
        instance_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateInstanceRequest::CreateInstanceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateInstanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInstanceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInstanceRequestDefaultTypeInternal() {}
  union {
    CreateInstanceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInstanceRequestDefaultTypeInternal _CreateInstanceRequest_default_instance_;

inline constexpr PerformActionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : markup_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PerformActionResponse::PerformActionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PerformActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformActionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformActionResponseDefaultTypeInternal() {}
  union {
    PerformActionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformActionResponseDefaultTypeInternal _PerformActionResponse_default_instance_;

inline constexpr CreateInstanceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : markup_{},
        instance_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateInstanceResponse::CreateInstanceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateInstanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInstanceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInstanceResponseDefaultTypeInternal() {}
  union {
    CreateInstanceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInstanceResponseDefaultTypeInternal _CreateInstanceResponse_default_instance_;
}  // namespace instance_host
}  // namespace spielbrett_api
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2finstance_5fhost_2fmessages_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2finstance_5fhost_2fmessages_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2finstance_5fhost_2fmessages_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceRequest, _impl_.instance_type_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceRequest, _impl_.user_ids_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse, _impl_.instance_id_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::CreateInstanceResponse, _impl_.markup_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionRequest, _impl_.instance_id_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionRequest, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionRequest, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionRequest, _impl_.args_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::spielbrett_api::instance_host::PerformActionResponse, _impl_.markup_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::spielbrett_api::instance_host::CreateInstanceRequest)},
        {10, 20, -1, sizeof(::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse)},
        {22, -1, -1, sizeof(::spielbrett_api::instance_host::CreateInstanceResponse)},
        {32, -1, -1, sizeof(::spielbrett_api::instance_host::PerformActionRequest)},
        {44, 54, -1, sizeof(::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse)},
        {56, -1, -1, sizeof(::spielbrett_api::instance_host::PerformActionResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::spielbrett_api::instance_host::_CreateInstanceRequest_default_instance_._instance,
    &::spielbrett_api::instance_host::_CreateInstanceResponse_MarkupEntry_DoNotUse_default_instance_._instance,
    &::spielbrett_api::instance_host::_CreateInstanceResponse_default_instance_._instance,
    &::spielbrett_api::instance_host::_PerformActionRequest_default_instance_._instance,
    &::spielbrett_api::instance_host::_PerformActionResponse_MarkupEntry_DoNotUse_default_instance_._instance,
    &::spielbrett_api::instance_host::_PerformActionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2finstance_5fhost_2fmessages_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"proto/instance_host/messages.proto\022\034sp"
    "ielbrett_api.instance_host\032\031google/proto"
    "buf/any.proto\"W\n\025CreateInstanceRequest\022#"
    "\n\rinstance_type\030\001 \001(\tR\014instanceType\022\031\n\010u"
    "ser_ids\030\002 \003(\tR\007userIds\"\316\001\n\026CreateInstanc"
    "eResponse\022\037\n\013instance_id\030\001 \001(\tR\ninstance"
    "Id\022X\n\006markup\030\002 \003(\0132@.spielbrett_api.inst"
    "ance_host.CreateInstanceResponse.MarkupE"
    "ntryR\006markup\0329\n\013MarkupEntry\022\020\n\003key\030\001 \001(\t"
    "R\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"|\n\024Perfo"
    "rmActionRequest\022\037\n\013instance_id\030\001 \001(\tR\nin"
    "stanceId\022\027\n\007user_id\030\002 \001(\tR\006userId\022\026\n\006act"
    "ion\030\003 \001(\tR\006action\022\022\n\004args\030\004 \003(\tR\004args\"\253\001"
    "\n\025PerformActionResponse\022W\n\006markup\030\001 \003(\0132"
    "\?.spielbrett_api.instance_host.PerformAc"
    "tionResponse.MarkupEntryR\006markup\0329\n\013Mark"
    "upEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\t"
    "R\005value:\0028\001BAZ\?github.com/spielbrett/spi"
    "elbrett-api/gen/go/proto/instance_hostb\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto = {
    false,
    false,
    766,
    descriptor_table_protodef_proto_2finstance_5fhost_2fmessages_2eproto,
    "proto/instance_host/messages.proto",
    &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto_once,
    descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_proto_2finstance_5fhost_2fmessages_2eproto::offsets,
    file_level_enum_descriptors_proto_2finstance_5fhost_2fmessages_2eproto,
    file_level_service_descriptors_proto_2finstance_5fhost_2fmessages_2eproto,
};
namespace spielbrett_api {
namespace instance_host {
// ===================================================================

class CreateInstanceRequest::_Internal {
 public:
};

CreateInstanceRequest::CreateInstanceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:spielbrett_api.instance_host.CreateInstanceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateInstanceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::spielbrett_api::instance_host::CreateInstanceRequest& from_msg)
      : user_ids_{visibility, arena, from.user_ids_},
        instance_type_(arena, from.instance_type_),
        _cached_size_{0} {}

CreateInstanceRequest::CreateInstanceRequest(
    ::google::protobuf::Arena* arena,
    const CreateInstanceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateInstanceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:spielbrett_api.instance_host.CreateInstanceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateInstanceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_ids_{visibility, arena},
        instance_type_(arena),
        _cached_size_{0} {}

inline void CreateInstanceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateInstanceRequest::~CreateInstanceRequest() {
  // @@protoc_insertion_point(destructor:spielbrett_api.instance_host.CreateInstanceRequest)
  SharedDtor(*this);
}
inline void CreateInstanceRequest::SharedDtor(MessageLite& self) {
  CreateInstanceRequest& this_ = static_cast<CreateInstanceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instance_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CreateInstanceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateInstanceRequest(arena);
}
constexpr auto CreateInstanceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_.user_ids_) +
          decltype(CreateInstanceRequest::_impl_.user_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateInstanceRequest), alignof(CreateInstanceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateInstanceRequest::PlacementNew_,
                                 sizeof(CreateInstanceRequest),
                                 alignof(CreateInstanceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateInstanceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateInstanceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateInstanceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateInstanceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateInstanceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateInstanceRequest>(), &CreateInstanceRequest::ByteSizeLong,
            &CreateInstanceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_._cached_size_),
        false,
    },
    &CreateInstanceRequest::kDescriptorMethods,
    &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateInstanceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> CreateInstanceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::CreateInstanceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string user_ids = 2 [json_name = "userIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_.user_ids_)}},
    // string instance_type = 1 [json_name = "instanceType"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_.instance_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instance_type = 1 [json_name = "instanceType"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_.instance_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string user_ids = 2 [json_name = "userIds"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceRequest, _impl_.user_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\62\15\10\0\0\0\0\0"
    "spielbrett_api.instance_host.CreateInstanceRequest"
    "instance_type"
    "user_ids"
  }},
};

PROTOBUF_NOINLINE void CreateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spielbrett_api.instance_host.CreateInstanceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_ids_.Clear();
  _impl_.instance_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateInstanceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateInstanceRequest& this_ = static_cast<const CreateInstanceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateInstanceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateInstanceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:spielbrett_api.instance_host.CreateInstanceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instance_type = 1 [json_name = "instanceType"];
          if (!this_._internal_instance_type().empty()) {
            const std::string& _s = this_._internal_instance_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceRequest.instance_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string user_ids = 2 [json_name = "userIds"];
          for (int i = 0, n = this_._internal_user_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_user_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceRequest.user_ids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:spielbrett_api.instance_host.CreateInstanceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateInstanceRequest::ByteSizeLong(const MessageLite& base) {
          const CreateInstanceRequest& this_ = static_cast<const CreateInstanceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateInstanceRequest::ByteSizeLong() const {
          const CreateInstanceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:spielbrett_api.instance_host.CreateInstanceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string user_ids = 2 [json_name = "userIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_user_ids().size());
              for (int i = 0, n = this_._internal_user_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_user_ids().Get(i));
              }
            }
          }
           {
            // string instance_type = 1 [json_name = "instanceType"];
            if (!this_._internal_instance_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instance_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateInstanceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateInstanceRequest*>(&to_msg);
  auto& from = static_cast<const CreateInstanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:spielbrett_api.instance_host.CreateInstanceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_user_ids()->MergeFrom(from._internal_user_ids());
  if (!from._internal_instance_type().empty()) {
    _this->_internal_set_instance_type(from._internal_instance_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInstanceRequest::CopyFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spielbrett_api.instance_host.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateInstanceRequest::InternalSwap(CreateInstanceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.user_ids_.InternalSwap(&other->_impl_.user_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instance_type_, &other->_impl_.instance_type_, arena);
}

::google::protobuf::Metadata CreateInstanceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CreateInstanceResponse_MarkupEntry_DoNotUse::CreateInstanceResponse_MarkupEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CreateInstanceResponse_MarkupEntry_DoNotUse::CreateInstanceResponse_MarkupEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CreateInstanceResponse_MarkupEntry_DoNotUse::CreateInstanceResponse_MarkupEntry_DoNotUse() : SuperType() {}
              CreateInstanceResponse_MarkupEntry_DoNotUse::CreateInstanceResponse_MarkupEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CreateInstanceResponse_MarkupEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CreateInstanceResponse_MarkupEntry_DoNotUse(arena);
              }
              constexpr auto CreateInstanceResponse_MarkupEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateInstanceResponse_MarkupEntry_DoNotUse),
                                                          alignof(CreateInstanceResponse_MarkupEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CreateInstanceResponse_MarkupEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CreateInstanceResponse_MarkupEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CreateInstanceResponse_MarkupEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CreateInstanceResponse_MarkupEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CreateInstanceResponse_MarkupEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CreateInstanceResponse_MarkupEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CreateInstanceResponse_MarkupEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CreateInstanceResponse_MarkupEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> CreateInstanceResponse_MarkupEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::CreateInstanceResponse_MarkupEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceResponse_MarkupEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\3\5\0\0\0\0\0"
    "spielbrett_api.instance_host.CreateInstanceResponse.MarkupEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CreateInstanceResponse::_Internal {
 public:
};

CreateInstanceResponse::CreateInstanceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:spielbrett_api.instance_host.CreateInstanceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateInstanceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::spielbrett_api::instance_host::CreateInstanceResponse& from_msg)
      : markup_{visibility, arena, from.markup_},
        instance_id_(arena, from.instance_id_),
        _cached_size_{0} {}

CreateInstanceResponse::CreateInstanceResponse(
    ::google::protobuf::Arena* arena,
    const CreateInstanceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateInstanceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:spielbrett_api.instance_host.CreateInstanceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateInstanceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : markup_{visibility, arena},
        instance_id_(arena),
        _cached_size_{0} {}

inline void CreateInstanceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateInstanceResponse::~CreateInstanceResponse() {
  // @@protoc_insertion_point(destructor:spielbrett_api.instance_host.CreateInstanceResponse)
  SharedDtor(*this);
}
inline void CreateInstanceResponse::SharedDtor(MessageLite& self) {
  CreateInstanceResponse& this_ = static_cast<CreateInstanceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instance_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CreateInstanceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateInstanceResponse(arena);
}
constexpr auto CreateInstanceResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_.markup_) +
          decltype(CreateInstanceResponse::_impl_.markup_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_.markup_) +
          decltype(CreateInstanceResponse::_impl_.markup_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateInstanceResponse), alignof(CreateInstanceResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateInstanceResponse::PlacementNew_,
                                 sizeof(CreateInstanceResponse),
                                 alignof(CreateInstanceResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateInstanceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateInstanceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateInstanceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateInstanceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateInstanceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateInstanceResponse>(), &CreateInstanceResponse::ByteSizeLong,
            &CreateInstanceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_._cached_size_),
        false,
    },
    &CreateInstanceResponse::kDescriptorMethods,
    &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateInstanceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 77, 2> CreateInstanceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::CreateInstanceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instance_id = 1 [json_name = "instanceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_.instance_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instance_id = 1 [json_name = "instanceId"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_.instance_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> markup = 2 [json_name = "markup"];
    {PROTOBUF_FIELD_OFFSET(CreateInstanceResponse, _impl_.markup_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CreateInstanceResponse()._impl_.markup_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\63\13\6\0\0\0\0\0"
    "spielbrett_api.instance_host.CreateInstanceResponse"
    "instance_id"
    "markup"
  }},
};

PROTOBUF_NOINLINE void CreateInstanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spielbrett_api.instance_host.CreateInstanceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.markup_.Clear();
  _impl_.instance_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateInstanceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateInstanceResponse& this_ = static_cast<const CreateInstanceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateInstanceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateInstanceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:spielbrett_api.instance_host.CreateInstanceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instance_id = 1 [json_name = "instanceId"];
          if (!this_._internal_instance_id().empty()) {
            const std::string& _s = this_._internal_instance_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceResponse.instance_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // map<string, string> markup = 2 [json_name = "markup"];
          if (!this_._internal_markup().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_markup();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceResponse.markup");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceResponse.markup");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceResponse.markup");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.CreateInstanceResponse.markup");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:spielbrett_api.instance_host.CreateInstanceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateInstanceResponse::ByteSizeLong(const MessageLite& base) {
          const CreateInstanceResponse& this_ = static_cast<const CreateInstanceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateInstanceResponse::ByteSizeLong() const {
          const CreateInstanceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:spielbrett_api.instance_host.CreateInstanceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> markup = 2 [json_name = "markup"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_markup_size());
              for (const auto& entry : this_._internal_markup()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string instance_id = 1 [json_name = "instanceId"];
            if (!this_._internal_instance_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instance_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateInstanceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateInstanceResponse*>(&to_msg);
  auto& from = static_cast<const CreateInstanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:spielbrett_api.instance_host.CreateInstanceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.markup_.MergeFrom(from._impl_.markup_);
  if (!from._internal_instance_id().empty()) {
    _this->_internal_set_instance_id(from._internal_instance_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInstanceResponse::CopyFrom(const CreateInstanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spielbrett_api.instance_host.CreateInstanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateInstanceResponse::InternalSwap(CreateInstanceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.markup_.InternalSwap(&other->_impl_.markup_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instance_id_, &other->_impl_.instance_id_, arena);
}

::google::protobuf::Metadata CreateInstanceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PerformActionRequest::_Internal {
 public:
};

PerformActionRequest::PerformActionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:spielbrett_api.instance_host.PerformActionRequest)
}
inline PROTOBUF_NDEBUG_INLINE PerformActionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::spielbrett_api::instance_host::PerformActionRequest& from_msg)
      : args_{visibility, arena, from.args_},
        instance_id_(arena, from.instance_id_),
        user_id_(arena, from.user_id_),
        action_(arena, from.action_),
        _cached_size_{0} {}

PerformActionRequest::PerformActionRequest(
    ::google::protobuf::Arena* arena,
    const PerformActionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PerformActionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:spielbrett_api.instance_host.PerformActionRequest)
}
inline PROTOBUF_NDEBUG_INLINE PerformActionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : args_{visibility, arena},
        instance_id_(arena),
        user_id_(arena),
        action_(arena),
        _cached_size_{0} {}

inline void PerformActionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PerformActionRequest::~PerformActionRequest() {
  // @@protoc_insertion_point(destructor:spielbrett_api.instance_host.PerformActionRequest)
  SharedDtor(*this);
}
inline void PerformActionRequest::SharedDtor(MessageLite& self) {
  PerformActionRequest& this_ = static_cast<PerformActionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instance_id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.action_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PerformActionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PerformActionRequest(arena);
}
constexpr auto PerformActionRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.args_) +
          decltype(PerformActionRequest::_impl_.args_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PerformActionRequest), alignof(PerformActionRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PerformActionRequest::PlacementNew_,
                                 sizeof(PerformActionRequest),
                                 alignof(PerformActionRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PerformActionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PerformActionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PerformActionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PerformActionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PerformActionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PerformActionRequest>(), &PerformActionRequest::ByteSizeLong,
            &PerformActionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_._cached_size_),
        false,
    },
    &PerformActionRequest::kDescriptorMethods,
    &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PerformActionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 86, 2> PerformActionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::PerformActionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string args = 4 [json_name = "args"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.args_)}},
    // string instance_id = 1 [json_name = "instanceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.instance_id_)}},
    // string user_id = 2 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.user_id_)}},
    // string action = 3 [json_name = "action"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instance_id = 1 [json_name = "instanceId"];
    {PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.instance_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action = 3 [json_name = "action"];
    {PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string args = 4 [json_name = "args"];
    {PROTOBUF_FIELD_OFFSET(PerformActionRequest, _impl_.args_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\61\13\7\6\4\0\0\0"
    "spielbrett_api.instance_host.PerformActionRequest"
    "instance_id"
    "user_id"
    "action"
    "args"
  }},
};

PROTOBUF_NOINLINE void PerformActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:spielbrett_api.instance_host.PerformActionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.instance_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.action_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PerformActionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PerformActionRequest& this_ = static_cast<const PerformActionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PerformActionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PerformActionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:spielbrett_api.instance_host.PerformActionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instance_id = 1 [json_name = "instanceId"];
          if (!this_._internal_instance_id().empty()) {
            const std::string& _s = this_._internal_instance_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionRequest.instance_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string user_id = 2 [json_name = "userId"];
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionRequest.user_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string action = 3 [json_name = "action"];
          if (!this_._internal_action().empty()) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionRequest.action");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string args = 4 [json_name = "args"];
          for (int i = 0, n = this_._internal_args_size(); i < n; ++i) {
            const auto& s = this_._internal_args().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionRequest.args");
            target = stream->WriteString(4, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:spielbrett_api.instance_host.PerformActionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PerformActionRequest::ByteSizeLong(const MessageLite& base) {
          const PerformActionRequest& this_ = static_cast<const PerformActionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PerformActionRequest::ByteSizeLong() const {
          const PerformActionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:spielbrett_api.instance_host.PerformActionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string args = 4 [json_name = "args"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_args().size());
              for (int i = 0, n = this_._internal_args().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_args().Get(i));
              }
            }
          }
           {
            // string instance_id = 1 [json_name = "instanceId"];
            if (!this_._internal_instance_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instance_id());
            }
            // string user_id = 2 [json_name = "userId"];
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string action = 3 [json_name = "action"];
            if (!this_._internal_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PerformActionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PerformActionRequest*>(&to_msg);
  auto& from = static_cast<const PerformActionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:spielbrett_api.instance_host.PerformActionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_args()->MergeFrom(from._internal_args());
  if (!from._internal_instance_id().empty()) {
    _this->_internal_set_instance_id(from._internal_instance_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PerformActionRequest::CopyFrom(const PerformActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spielbrett_api.instance_host.PerformActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PerformActionRequest::InternalSwap(PerformActionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instance_id_, &other->_impl_.instance_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
}

::google::protobuf::Metadata PerformActionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PerformActionResponse_MarkupEntry_DoNotUse::PerformActionResponse_MarkupEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PerformActionResponse_MarkupEntry_DoNotUse::PerformActionResponse_MarkupEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PerformActionResponse_MarkupEntry_DoNotUse::PerformActionResponse_MarkupEntry_DoNotUse() : SuperType() {}
              PerformActionResponse_MarkupEntry_DoNotUse::PerformActionResponse_MarkupEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PerformActionResponse_MarkupEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PerformActionResponse_MarkupEntry_DoNotUse(arena);
              }
              constexpr auto PerformActionResponse_MarkupEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PerformActionResponse_MarkupEntry_DoNotUse),
                                                          alignof(PerformActionResponse_MarkupEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PerformActionResponse_MarkupEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PerformActionResponse_MarkupEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PerformActionResponse_MarkupEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PerformActionResponse_MarkupEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PerformActionResponse_MarkupEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PerformActionResponse_MarkupEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PerformActionResponse_MarkupEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PerformActionResponse_MarkupEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> PerformActionResponse_MarkupEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::PerformActionResponse_MarkupEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(PerformActionResponse_MarkupEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\76\3\5\0\0\0\0\0"
    "spielbrett_api.instance_host.PerformActionResponse.MarkupEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PerformActionResponse::_Internal {
 public:
};

PerformActionResponse::PerformActionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:spielbrett_api.instance_host.PerformActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PerformActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::spielbrett_api::instance_host::PerformActionResponse& from_msg)
      : markup_{visibility, arena, from.markup_},
        _cached_size_{0} {}

PerformActionResponse::PerformActionResponse(
    ::google::protobuf::Arena* arena,
    const PerformActionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PerformActionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:spielbrett_api.instance_host.PerformActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PerformActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : markup_{visibility, arena},
        _cached_size_{0} {}

inline void PerformActionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PerformActionResponse::~PerformActionResponse() {
  // @@protoc_insertion_point(destructor:spielbrett_api.instance_host.PerformActionResponse)
  SharedDtor(*this);
}
inline void PerformActionResponse::SharedDtor(MessageLite& self) {
  PerformActionResponse& this_ = static_cast<PerformActionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PerformActionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PerformActionResponse(arena);
}
constexpr auto PerformActionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PerformActionResponse, _impl_.markup_) +
          decltype(PerformActionResponse::_impl_.markup_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PerformActionResponse, _impl_.markup_) +
          decltype(PerformActionResponse::_impl_.markup_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PerformActionResponse), alignof(PerformActionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PerformActionResponse::PlacementNew_,
                                 sizeof(PerformActionResponse),
                                 alignof(PerformActionResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PerformActionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PerformActionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PerformActionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PerformActionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PerformActionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PerformActionResponse>(), &PerformActionResponse::ByteSizeLong,
            &PerformActionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PerformActionResponse, _impl_._cached_size_),
        false,
    },
    &PerformActionResponse::kDescriptorMethods,
    &descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PerformActionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 65, 2> PerformActionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::spielbrett_api::instance_host::PerformActionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> markup = 1 [json_name = "markup"];
    {PROTOBUF_FIELD_OFFSET(PerformActionResponse, _impl_.markup_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PerformActionResponse()._impl_.markup_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\62\6\0\0\0\0\0\0"
    "spielbrett_api.instance_host.PerformActionResponse"
    "markup"
  }},
};

PROTOBUF_NOINLINE void PerformActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:spielbrett_api.instance_host.PerformActionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.markup_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PerformActionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PerformActionResponse& this_ = static_cast<const PerformActionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PerformActionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PerformActionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:spielbrett_api.instance_host.PerformActionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, string> markup = 1 [json_name = "markup"];
          if (!this_._internal_markup().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_markup();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionResponse.markup");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionResponse.markup");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionResponse.markup");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "spielbrett_api.instance_host.PerformActionResponse.markup");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:spielbrett_api.instance_host.PerformActionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PerformActionResponse::ByteSizeLong(const MessageLite& base) {
          const PerformActionResponse& this_ = static_cast<const PerformActionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PerformActionResponse::ByteSizeLong() const {
          const PerformActionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:spielbrett_api.instance_host.PerformActionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> markup = 1 [json_name = "markup"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_markup_size());
              for (const auto& entry : this_._internal_markup()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PerformActionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PerformActionResponse*>(&to_msg);
  auto& from = static_cast<const PerformActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:spielbrett_api.instance_host.PerformActionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.markup_.MergeFrom(from._impl_.markup_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PerformActionResponse::CopyFrom(const PerformActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spielbrett_api.instance_host.PerformActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PerformActionResponse::InternalSwap(PerformActionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.markup_.InternalSwap(&other->_impl_.markup_);
}

::google::protobuf::Metadata PerformActionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace instance_host
}  // namespace spielbrett_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2finstance_5fhost_2fmessages_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
